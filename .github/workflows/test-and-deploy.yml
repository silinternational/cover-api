name: Test and Deploy

on:
  push:

env:
  BRANCH_NAME: deepfactor #${{ github.ref_name }}
  IMAGE_NAME: cover
  DF_RUN_TOKEN: ${{ secrets.DF_RUN_TOKEN }}
  AWS_REGION: ${{ vars.AWS_REGION }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  S3_PATH: ""

jobs:
#  test:
#    name: Test
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#      - name: Run unit tests
#        run: docker-compose -f actions-services.yml run --rm app ./run-tests.sh

#  apidocs:
#    name: Update api docs
#    if: github.ref_name == 'develop'
#    runs-on: ubuntu-latest
#    env:
#      S3_PATH: ${{ vars.S3_PATH }}
#    steps:
#      - uses: actions/checkout@v4
#      - name: Update api docs
#        run: docker-compose -f actions-services.yml run --rm docs ./build-push-api-docs.sh

  build:
    name: Build and Deploy
#    if: github.ref_name == 'main' || github.ref_name == 'develop'
#    needs:
#      - test
    outputs:
      image: ${{ steps.setup.outputs.image }}
      timestamp: ${{ steps.setup.outputs.timestamp }}
      environment: ${{ steps.setup.outputs.environment }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup
        id: setup
        run: |
          echo "image=$IMAGE_NAME" >> $GITHUB_OUTPUT
          echo "timestamp=$(date +'%s')" >> $GITHUB_OUTPUT
          case "$BRANCH_NAME" in
          "main") echo "environment=prod" >> $GITHUB_OUTPUT ;;
          *) echo "environment=stg" >> $GITHUB_OUTPUT ;;
          esac

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and export
        uses: docker/build-push-action@v5
        with:
          context: ./application
          tags: ${{ env.IMAGE_NAME }}
          outputs: type=docker,dest=/tmp/image

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.IMAGE_NAME }}
          path: /tmp/image

  Scan:
    name: Deepfactor scan
    needs: build
    uses: ./.github/workflows/deepfactor-scan-image.yml
    secrets:
      deepfactor_run_token: ${{ secrets.DF_RUN_TOKEN }}
    with:
      image: cover

  Deploy:
    name: ECS deploy
    uses: ./.github/workflows/ecs-deploy.yml
    needs: build
    with:
      cluster: appsdev-${{ needs.build.outputs.environment }}
      service: cover-api
      image: ${{ needs.build.outputs.image }}
      tags: deepfactor ${{ needs.build.outputs.timestamp }}
      environment: ${{ needs.build.outputs.environment }}
      aws-region: ${{ vars.AWS_REGION }}
    secrets: inherit
